- module: iptables
  description: "iptables/ip6tables â€” administration tool for IPv4/IPv6 packet filtering and NAT"
  classes:
   - name: linux_ip_tables
     desc: |
       iptables [-t table] {-A|-C|-D} chain rule-specification
       ip6tables [-t table] {-A|-C|-D} chain rule-specification
       iptables [-t table] -I chain [rulenum] rule-specification
       iptables [-t table] -R chain rulenum rule-specification
       iptables [-t table] -D chain rulenum
       iptables [-t table] -S [chain [rulenum]]
       iptables [-t table] {-F|-L|-Z} [chain [rulenum]] [options...]
       iptables [-t table] -N chain
       iptables [-t table] -X [chain]
       iptables [-t table] -P chain target
       iptables [-t table] -E old-chain-name new-chain-name
       rule-specification = [matches...] [target]
       match = -m matchname [per-match-options]
       target = -j targetname [per-target-options]
     implements: "dent:iptables:ip_tables"
     platforms: ['dentos', 'cumulus']
     commands:
      - name: update_rules
        apis: ['append', 'check', 'delete', 'insert', 'replace' ]
        cmd: [ 'iptables' ]
        params: [ 'table', 'rulenum', 'protocol', 'source' ,'destination', 'match', 'target', 'goto', 'iif', 'oif', 'fragment', 'options']
        desc: |
         -A, --append chain rule-specification
                Append one or more rules to the end of the selected chain.  When the source and/or destination names resolve
                to more than one address, a rule will be added for each possible  address combination.

         -C, --check chain rule-specification
                Check whether a rule matching the specification does exist in the selected chain. This command uses the same
                logic as -D to find a matching entry, but does not alter the existing
                iptables configuration and uses its exit code to indicate success or failure.

         -D, --delete chain rule-specification
         -D, --delete chain rulenum
                Delete one or more rules from the selected chain.  There are two versions of this command: the rule
                can be specified as a number in the chain (starting at 1 for the  first  rule) or a rule to match.
         -I, --insert chain [rulenum] rule-specification
              Insert  one or more rules in the selected chain as the given rule number.  So, if the rule number is 1,
              the rule or rules are inserted at the head of the chain.  This is also the
              default if no rule number is specified.
         -R, --replace chain rulenum rule-specification
              Replace a rule in the selected chain.  If the source and/or destination names resolve to multiple
              addresses, the command will fail.  Rules are numbered starting at 1.

      - name: show_rules
        apis: ['list' ,'list_rules', 'flush', 'zero']
        cmd: [ 'iptables' ]
        params: [ 'table', 'chain', 'rulenum', 'options']
        desc: |
         -L, --list [chain]
          List all rules in the selected chain.  If no chain is selected, all chains are listed. Like every other
          iptables command, it applies to the specified table  (filter  is  the  default), so NAT rules get listed by
           iptables -t nat -n -L
           Please note that it is often used with the -n option, in order to avoid long reverse DNS lookups.
           It is legal to specify the -Z (zero) option as well, in which case the chain(s) will be atomically listed
           and zeroed.  The exact output is affected by the other arguments given. The exact rules are suppressed
           until you use iptables -L -v  or iptables-save(8).

         -S, --list-rules [chain]
          Print all rules in the selected chain.  If no chain is selected, all chains are printed like iptables-save.
          Like every other iptables command, it applies to the  specified  table (filter is the default).

         -F, --flush [chain]
          Flush the selected chain (all the chains in the table if none is given).  This is equivalent to deleting
          all the rules one by one.

         -Z, --zero [chain [rulenum]]
          Zero  the  packet and byte counters in all chains, or only the given chain, or only the given rule in a chain.
          It is legal to specify the -L, --list (list) option as well, to see the counters immediately before they are
          cleared. (See above.)

      - name: update_chain
        apis: ['new_chain', 'policy', 'rename_chain']
        cmd: [ 'iptables' ]
        params: [ 'table', 'chain', 'target', 'options']
        desc: |
         -N, --new-chain chain
          Create a new user-defined chain by the given name.  There must be no target of that name already.
         -X, --delete-chain [chain]
          Delete the optional user-defined chain specified.  There must be no references to the chain.
          If there are, you must delete or replace the referring rules before the chain can be deleted.
          The chain must be empty, i.e. not contain any rules.  If no argument is given, it will attempt
          to delete every non-builtin chain in the table.

         -P, --policy chain target
          Set the policy for the built-in (non-user-defined) chain to the given target.  The policy target
          must be either ACCEPT or DROP.

         -E, --rename-chain old-chain new-chain
          Rename the user specified chain to the user supplied name.  This is cosmetic, and has no effect
          on the structure of the table.
