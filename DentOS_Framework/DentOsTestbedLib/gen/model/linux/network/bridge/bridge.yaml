- module: bridge
  description: bridge - show / manipulate bridge addresses and devices
  classes:
  - name: linux_bridge_link
    desc: |
      bridge link set dev DEV [ cost COST ] [ priority PRIO ] [ state STATE ] [ guard { on | off } ]
        [ hairpin { on | off } ] [ fastleave { on | off } ] [ root_block { on | off } ]
        [ learning { on | off } ] [ learning_sync { on | off } ] [ flood { on | off } ]
        [ hwmode { vepa | veb } ] [ mcast_flood { on | off } ] [ mcast_to_unicast { on | off } ]
        [ neigh_suppress { on | off } ] [ vlan_tunnel { on | off } ] [ isolated { on | off } ]
        [ backup_port DEVICE ] [ nobackup_port ] [ self ] [ master ]
      bridge link [ show ] [ dev DEV ]
    implements: "dent:bridge:bridge_link"
    platforms: ['dentos', 'cumulus']
    commands:
    - name: set
      apis: ['set']
      cmd: ['bridge link']
      params: ['dev', 'cost', 'priority', 'state', 'guard', 'hairpin', 'fastleave', 'root_block', 'learning', 'learning_sync', 'flood', 'hwmode', 'mcast_flood', 'mcast_to_unicast', 'neigh_suppress', 'vlan_tunnel', 'vlan_tunnel', 'isolated', 'backup_port', 'nobackup_port', 'self', 'master', 'options']
      desc: |
        bridge link set dev DEV [ cost COST ] [ priority PRIO ] [ state STATE ] [ guard { on | off } ]
          [ hairpin { on | off } ] [ fastleave { on | off } ] [ root_block { on | off } ]
          [ learning { on | off } ] [ learning_sync { on | off } ] [ flood { on | off } ]
          [ hwmode { vepa | veb } ] [ mcast_flood { on | off } ] [ mcast_to_unicast { on | off } ]
          [ neigh_suppress { on | off } ] [ vlan_tunnel { on | off } ] [ isolated { on | off } ]
          [ backup_port DEVICE ] [ nobackup_port ] [ self ] [ master ]
    - name: show
      apis: ['show']
      cmd: ['bridge link']
      params: ['dev', 'options']
      desc: |
        bridge link [ show ] [ dev DEV ]
  - name: linux_bridge_fdb
    desc: |
      The corresponding commands display fdb entries, add new entries, append entries, and delete old ones.
    implements: "dent:bridge:bridge_fdb"
    platforms: ['dentos', 'cumulus']
    commands:
    - name: update
      apis: ['add', 'append', 'delete', 'replace']
      cmd: ['bridge fdb']
      params: ['dev', 'lladdr', 'local', 'static', 'dynamic', 'self', 'master', 'router', 'use', 'extern_learn', 'sticky', 'dst', 'src_vni', 'vni', 'port', 'via', 'options']
      desc: |
        bridge fdb { add | append | del | replace } LLADDR dev DEV { local | static | dynamic } [ self ]
          [ master ] [ router ] [ use ] [ extern_learn ] [ sticky ] [ dst IPADDR ] [ src_vni VNI ]
          [ vni VNI ] [ port PORT ] [ via DEVICE ]
    - name: show
      apis: ['show']
      cmd: ['bridge fdb']
      params: ['dev', 'br', 'brport', 'vlan', 'state', 'options']
      desc: |
        bridge fdb [ show ] [ dev DEV ] [ br BRDEV ] [ brport DEV ] [ vlan VID ] [ state STATE ]
  - name: linux_bridge_mdb
    desc: |
      The corresponding commands display mdb entries, add new entries, and delete old ones.
    implements: "dent:bridge:bridge_mdb"
    platforms: ['dentos', 'cumulus']
    commands:
    - name: update
      apis: ['add', 'delete']
      cmd: ['bridge mdb']
      params: ['dev', 'port', 'grp', 'permanent', 'temp', 'vid']
      desc: |
        bridge mdb { add | del } dev DEV port PORT grp GROUP [ permanent | temp ] [ vid VID ]
    - name: show
      apis: ['show']
      cmd: ['bridge mdb']
      params: ['dev', 'options']
      desc: |
        bridge mdb show [ dev DEV ]
  - name: linux_bridge_vlan
    desc: |
      The corresponding commands display vlan filter entries, add new entries, and delete old ones.
    implements: "dent:bridge:bridge_vlan"
    platforms: ['dentos', 'cumulus']
    commands:
    - name: update
      apis: ['add', 'delete']
      cmd: ['bridge vlan']
      params: ['dev', 'vid', 'tunnel_info', 'pvid', 'untagged', 'self', 'master', 'options']
      desc: |
        bridge vlan { add | del } dev DEV vid VID [ tunnel_info TUNNEL_ID ] [ pvid ] [ untagged ] [ self ] [ master ]
    - name: show
      apis: ['show', 'tunnelshow']
      cmd: ['bridge vlan']
      params: ['dev', 'master']
      desc: ""
  - name: linux_bridge_monitor
    desc: ""
    implements: "dent:bridge:bridge_monitor"
    platforms: ['dentos', 'cumulus']
    commands:
    - name: monitor
      apis: ['monitor']
      cmd: ['bridge monitor']
      params: ['options']
      desc: |
        bridge monitor [ all | neigh | link | mdb ]
